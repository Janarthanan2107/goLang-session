func GetUsersExcel(c *gin.Context) {
	file := excelize.NewFile()

	// Create a new sheet
	index := file.NewSheet("Users")

	// Set headers
	headers := []string{"ID", "Username", "Email"}
	for col, header := range headers {
		cell := excelize.ToAlphaString(col) + "1"
		file.SetCellValue("Users", cell, header)
	}

	// Set data
	for row, user := range users {
		file.SetCellValue("Users", "A"+strconv.Itoa(row+2), user.ID)
		file.SetCellValue("Users", "B"+strconv.Itoa(row+2), user.Username)
		file.SetCellValue("Users", "C"+strconv.Itoa(row+2), user.Email)
	}

	// Set active sheet of the workbook
	file.SetActiveSheet(index)

	// Save the XLSX file to a temporary location
	tempFile := "users.xlsx"
	if err := file.SaveAs(tempFile); err != nil {
		c.AbortWithStatus(http.StatusInternalServerError)
		return
	}
	defer os.Remove(tempFile)

	// Set headers for file download
	c.Header("Content-Type", "application/octet-stream")
	c.Header("Content-Disposition", "attachment; filename=users.xlsx")

	// Stream the file to the client
	c.File(tempFile)
}

func GetUserHtml(c *gin.Context) {
	// Assuming you want to pass a username to the HTML template
	// username := "John Doe"

	// Render the HTML template with the data
	c.HTML(http.StatusOK, "report.html", gin.H{
		"Users": users,
	})
}